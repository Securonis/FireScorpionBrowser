// IMPORTANT: Start your code on the 2nd line
//
// FireScorpion Browser - Securonis Configuration File
// This file contains advanced security and privacy settings for Firefox
// This configuration ensures Firefox works effectively with Tor and I2P

// ===== Telemetry and Data Collection Protection =====
// Disable all telemetry and data collection features to maximize privacy

// Prevent data submission to Mozilla
lockPref("datareporting.policy.dataSubmissionEnabled", false);
lockPref("datareporting.healthreport.uploadEnabled", false);
lockPref("datareporting.policy.firstRunURL", "");
lockPref("toolkit.telemetry.enabled", false);
lockPref("toolkit.telemetry.unified", false);
lockPref("toolkit.telemetry.server", "");
lockPref("toolkit.telemetry.archive.enabled", false);
lockPref("toolkit.telemetry.newProfilePing.enabled", false);
lockPref("toolkit.telemetry.updatePing.enabled", false);
lockPref("toolkit.telemetry.bhrPing.enabled", false);
lockPref("toolkit.telemetry.firstShutdownPing.enabled", false);
lockPref("toolkit.telemetry.shutdownPingSender.enabled", false);
lockPref("toolkit.telemetry.pioneer-new-studies-available", false);
lockPref("toolkit.telemetry.reportingpolicy.firstRun", false);
lockPref("toolkit.telemetry.coverage.opt-out", true);
lockPref("toolkit.coverage.opt-out", true);
lockPref("toolkit.coverage.endpoint.base", "");
lockPref("beacon.enabled", false);
lockPref("browser.uitour.enabled", false);
lockPref("browser.uitour.url", "");

// Studies ve deneyleri engelle
lockPref("app.shield.optoutstudies.enabled", false);
lockPref("app.normandy.enabled", false);
lockPref("app.normandy.api_url", "");

// Crash Reporter'ı devre dışı bırak
lockPref("breakpad.reportURL", "");
lockPref("browser.tabs.crashReporting.sendReport", false);
lockPref("browser.crashReports.unsubmittedCheck.enabled", false);
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit2", false);

// ===== Mozilla Entegrasyonlarını Kapat =====
// Mozilla ve üçüncü taraf entegrasyonlarını devre dışı bırak

// Pocket'ı tamamen devre dışı bırak
lockPref("extensions.pocket.enabled", false);
lockPref("extensions.pocket.site", "");
lockPref("extensions.pocket.oAuthConsumerKey", "");
lockPref("extensions.pocket.api", "");
lockPref("extensions.pocket.onSaveRecs", false);
lockPref("extensions.pocket.showHome", false);
lockPref("browser.newtabpage.activity-stream.section.highlights.includePocket", false);
lockPref("services.sync.prefs.sync.browser.newtabpage.activity-stream.section.highlights.includePocket", false);

// Firefox Hesapları ve Sync ile ilgili özellikleri sınırla
lockPref("identity.fxaccounts.enabled", false);
lockPref("services.sync.engine.creditcards", false);
lockPref("services.sync.engine.addresses", false);

// Firefox View'i kapat
lockPref("browser.tabs.firefox-view", false);
lockPref("browser.firefox-view.feature-tour", "{\"screen\":\"CLOSED\"}");

// Mozilla'nın "eklenti önerileri" özelliklerini kapat
lockPref("browser.discovery.enabled", false);
lockPref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons", false);
lockPref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr.features", false);

// ===== Safe Browsing Gizlilik İyileştirmeleri =====
// Google'a veri gönderimini engellerken bazı temel korumaları aktif tutar

// Safe Browsing güvenlik özelliğini etkin tut ama veri gönderimini engelle
lockPref("browser.safebrowsing.malware.enabled", true);
lockPref("browser.safebrowsing.phishing.enabled", true);

// Safe Browsing uzaktan raporlama özelliklerini devre dışı bırak
lockPref("browser.safebrowsing.downloads.remote.enabled", false);
lockPref("browser.safebrowsing.downloads.remote.url", "");
lockPref("browser.safebrowsing.downloads.remote.block_potentially_unwanted", false);
lockPref("browser.safebrowsing.downloads.remote.block_uncommon", false);

// Google'ın Safe Browsing ile ilgili veri paylaşımını engelle
lockPref("browser.safebrowsing.provider.google4.dataSharing.enabled", false);
lockPref("browser.safebrowsing.provider.google4.dataSharingURL", "");
lockPref("browser.safebrowsing.provider.google.reportMalwareMistakeURL", "");
lockPref("browser.safebrowsing.provider.google.reportPhishMistakeURL", "");
lockPref("browser.safebrowsing.provider.google.reportURL", "");
lockPref("browser.safebrowsing.reportPhishURL", "");

// URL bar güvenlik uyarılarını etkin tut
lockPref("browser.safebrowsing.blockedURIs.enabled", true);

// ===== WebRTC Security =====
// Strong settings that prevent IP leaks without disabling WebRTC 
// Note: Keeps video calling applications functional

// Keep WebRTC enabled but enhance security
lockPref("media.peerconnection.enabled", true);

// ICE protections to prevent IP leaks
lockPref("media.peerconnection.ice.default_address_only", true); // Use only default IP address
lockPref("media.peerconnection.ice.no_host", true);                // Hide local IPs
lockPref("media.peerconnection.ice.proxy_only_if_behind_proxy", true); // Connect only through proxy when behind proxy
lockPref("media.peerconnection.identity.timeout", 1);               // Shorten identity verification timeout

// WebRTC signal security
lockPref("media.peerconnection.use_document_iceservers", false);     // Prevent websites from using their own ICE servers
lockPref("media.peerconnection.turn.disable", true);                 // Disable TURN servers
lockPref("media.peerconnection.video.enabled", true);                // Keep video calls enabled

// ===== Network Security =====
// Make DNS, cache and network connections more secure

// DNS and cache protections
lockPref("network.prefetch-next", false);                // Disable link prefetching
lockPref("network.dns.disablePrefetch", true);         // Disable DNS prefetching
lockPref("network.dns.disablePrefetchFromHTTPS", true); // Disable DNS prefetching even for HTTPS
lockPref("network.predictor.enabled", false);           // Disable network prediction
lockPref("network.predictor.enable-prefetch", false);   // Disable network prediction prefetching
lockPref("network.http.speculative-parallel-limit", 0);  // Block speculative connections

// ===== Parmak İzi Koruması (Fingerprinting Protection) =====
// Tarayıcının tanımlanabilir özelliklerini gizleyerek kullanıcı izlemeyi zorlaştır

// Firefox'un Ana Parmak İzi Koruma Sistemi
lockPref("privacy.resistFingerprinting", true);                   // Enable fingerprinting protection
lockPref("privacy.resistFingerprinting.block_mozAddonManager", true); // Block add-on fingerprinting 
lockPref("privacy.resistFingerprinting.letterboxing", true);        // Standardize window dimensions
lockPref("privacy.resistFingerprinting.autoDeclineNoUserInputCanvasPrompts", true); // Automatically decline canvas prompts

// Tracking Protection and Blockers
lockPref("privacy.trackingprotection.fingerprinting.enabled", true); // Block fingerprinting tracking
lockPref("privacy.trackingprotection.cryptomining.enabled", true);   // Block cryptomining
lockPref("privacy.trackingprotection.enabled", true);               // Enable general tracking protection
lockPref("privacy.trackingprotection.socialtracking.enabled", true); // Block social media tracking

// Canvas, WebGL and Hardware API Fingerprinting Protection
lockPref("privacy.trackingprotection.annotate_channels", true);
lockPref("privacy.file_unique_origin", true);
lockPref("browser.send_pings", false);                            // Block ping requests
lockPref("browser.send_pings.require_same_host", true);            // Limit pings to same host

// Disable hardware sensor APIs
lockPref("device.sensors.enabled", false);            // Disable device sensors
lockPref("device.sensors.orientation.enabled", false); // Disable device orientation sensor
lockPref("device.sensors.motion.enabled", false);      // Disable device motion sensor
lockPref("device.sensors.proximity.enabled", false);   // Disable device proximity sensor
lockPref("device.sensors.ambientLight.enabled", false); // Disable device ambient light sensor
lockPref("dom.gamepad.enabled", false);                            // Disable Gamepad API
lockPref("dom.vibrator.enabled", false);                            // Disable Vibration API
lockPref("dom.battery.enabled", false);                             // Disable Battery API
lockPref("dom.enable_performance", false);                          // Disable Performance API

// WebGL security settings
lockPref("webgl.disabled", true);                         // Disable WebGL
lockPref("webgl.min_capability_mode", true);              // Run with minimum capabilities
lockPref("webgl.disable-extensions", true);               // Disable WebGL extensions
lockPref("webgl.disable-fail-if-major-performance-caveat", true); // Don't fail on performance issues
lockPref("webgl.enable-webgl2", false);                   // Disable WebGL2

// Canvas fingerprinting protections
lockPref("canvas.capturestream.enabled", false);           // Disable canvas capture
lockPref("canvas.poisondata", true);                      // Add noise to canvas data
lockPref("gfx.downloadable_fonts.woff2.enabled", false);   // Disable WOFF2 fonts

// ===== I2P and Tor Integration =====
// Support for private networks while maximizing security and privacy

// Strict DNS settings for .onion and .i2p domains
lockPref("network.dns.blockDotOnion", false);         // Allow access to .onion domains
lockPref("network.dns.blockDotI2p", false);          // Allow access to .i2p domains
lockPref("network.proxy.socks_remote_dns", true);    // Use proxy for DNS queries (prevents DNS leaks)

// Enhance Tor and I2P compatibility
lockPref("network.proxy.type", 2);                   // Use proxy auto-config file
lockPref("network.proxy.autoconfig_url", "file:///etc/securonis/onion.pac");
lockPref("network.proxy.socks", "127.0.0.1");        // SOCKS proxy address
lockPref("network.proxy.socks_port", 9050);          // Tor SOCKS port
lockPref("network.proxy.socks_version", 5);          // Use SOCKS5

// Additional settings for special networks
lockPref("network.http.referer.XOriginPolicy", 1);    // Limit referrer information to cross-origin sites
lockPref("network.http.referer.XOriginTrimmingPolicy", 2);  // Trim referrers for cross-origin pages
lockPref("network.proxy.allow_hijacking_localhost", true);  // Put localhost behind proxy

// ===== HTTPS and TLS Security =====
// Strong encryption and secure HTTPS settings protect user's web connections

// HTTPS enforcement settings
lockPref("dom.security.https_only_mode", true);                 // Allow only HTTPS connections
lockPref("dom.security.https_only_mode_pbm", true);              // Enforce HTTPS in private browsing mode
lockPref("dom.security.https_only_mode_ever_enabled", true);      // Always enable HTTPS-Only mode
lockPref("dom.security.https_only_mode_error_page_user_suggestions", false); // Don't suggest HTTP fallback to user
lockPref("dom.security.https_only_mode_send_http_background_request", false); // Don't make HTTP requests in background

// TLS security settings
lockPref("security.tls.version.min", 3);                       // TLS 1.3 minimum (most secure TLS version)
lockPref("security.tls.version.fallback-limit", 3);             // Limit fallback to TLS 1.3 as well
lockPref("security.tls.enable_0rtt_data", false);               // 0-RTT connections compromise security

// SSL/TLS security enhancements
lockPref("security.ssl.require_safe_negotiation", true);         // Require secure TLS negotiation
lockPref("security.ssl.treat_unsafe_negotiation_as_broken", true); // Mark unsafe SSL/TLS negotiations as broken
lockPref("security.ssl.disable_session_identifiers", true);      // Disable SSL session identifiers
lockPref("security.OCSP.require", true);                        // Require OCSP verification (checks certificate validity)

// Certificate transparency
lockPref("security.cert_pinning.enforcement_level", 2);           // Enforce strict certificate pinning
lockPref("security.ssl.enable_ocsp_stapling", true);            // Enable OCSP stapling

// ===== Sensitive Data Protection =====
// Enhance security by preventing storage of form data and login information

// Disable automatic form filling and password saving features
lockPref("signon.autofillForms", false);                     // Disable automatic form filling
lockPref("signon.rememberSignons", false);                    // Disable password saving
lockPref("signon.management.page.breach-alerts.enabled", false); // Turn off data breach alerts
lockPref("signon.autofillForms.http", false);                 // Disable form filling on HTTP sites
lockPref("browser.formfill.enable", false);                   // Completely disable form filling feature

// Turn off Firefox form autofill features
lockPref("extensions.formautofill.available", "off");         // Disable form autofill
lockPref("extensions.formautofill.addresses.enabled", false);  // Disable address filling
lockPref("extensions.formautofill.creditCards.enabled", false); // Disable credit card filling
lockPref("extensions.formautofill.heuristics.enabled", false); // Disable form data prediction
lockPref("browser.search.suggest.enabled", false);            // Disable search suggestions
lockPref("browser.urlbar.suggest.history", false);            // Disable history suggestions
lockPref("browser.urlbar.suggest.searches", false);           // Disable search suggestions

// Automatic browsing data cleaning
lockPref("privacy.sanitize.sanitizeOnShutdown", true);       // Clean data on exit
lockPref("privacy.clearOnShutdown.cache", true);             // Clear cache
lockPref("privacy.clearOnShutdown.cookies", true);           // Clear cookies
lockPref("privacy.clearOnShutdown.downloads", true);         // Clear download history
lockPref("privacy.clearOnShutdown.formdata", true);          // Clear form data
lockPref("privacy.clearOnShutdown.history", true);           // Clear browsing history
lockPref("privacy.clearOnShutdown.sessions", true);          // Clear session information

// ===== Attack Surface Reduction =====
// Improve security by disabling unused features

// Reduce attack surface by disabling accessibility services
lockPref("accessibility.force_disabled", 1);
lockPref("accessibility.browsewithcaret", false);
lockPref("accessibility.typeaheadfind", false);
lockPref("accessibility.blockautorefresh", false);

// Limit system integrations
lockPref("network.protocol-handler.external.ms-windows-store", false);
lockPref("network.protocol-handler.external.shell", false);

// ===== Enhanced Tracking Protection =====
// Block cookie, storage, and communication-based tracking methods

// Cookie policies and protections
lockPref("network.cookie.cookieBehavior", 5);              // Block all cross-site cookies
lockPref("network.cookie.lifetimePolicy", 2);              // Accept cookies only for the current session
lockPref("network.cookie.thirdparty.sessionOnly", true);   // Third-party cookies only for session
lockPref("network.cookie.thirdparty.nonsecureSessionOnly", true); // Insecure third-party cookies only for session

// Cookie partitioning settings
lockPref("privacy.partition.network_state", true);          // Partition network state
lockPref("privacy.partition.serviceWorkers", true);         // Partition service workers
lockPref("privacy.partition.network_state.ocsp_cache", true); // Partition OCSP cache
lockPref("privacy.partition.bloburl_per_partition_key", true); // Partition Blob URLs

// Query parameter protections
lockPref("privacy.query_stripping.enabled", true);          // Strip query parameters
lockPref("privacy.query_stripping.strip_list", "__hsfp __hssc __hstc __s _hsenc _openstat dclid fbclid gbraid gclid hsCtaTracking igshid mc_eid ml_subscriber ml_subscriber_hash msclkid oft_c oft_ck oft_d oft_id oft_ids oft_k oft_lk oft_sk oly_anon_id oly_enc_id rb_clickid s_cid twclid vero_conv vero_id wbraid wickedid yclid");

// ===== Extension Security and First Party Isolation =====
// Security settings for extensions and domain isolation

// Security settings for extensions
lockPref("extensions.blocklist.enabled", true);              // Enable extension blocking
lockPref("extensions.getAddons.showPane", false);             // Disable extension recommendations
lockPref("extensions.htmlaboutaddons.recommendations.enabled", false);  // Don't show extension recommendations
lockPref("xpinstall.signatures.required", true);             // Require signed extensions

// First party isolation (FPI)
lockPref("privacy.firstparty.isolate", true);              // Isolate data between different sites
lockPref("privacy.firstparty.isolate.restrict_opener_access", true); // Restrict access of new windows to their opener

// ===== DuckDuckGo Search Engine Settings =====
// Set DuckDuckGo as the default search engine and new tab page

// Default search engine settings for DuckDuckGo
lockPref("browser.search.defaultenginename", "DuckDuckGo");
lockPref("browser.search.selectedEngine", "DuckDuckGo");
lockPref("browser.urlbar.placeholderName", "DuckDuckGo");
lockPref("browser.search.selectedEngine", "DuckDuckGo");
lockPref("browser.urlbar.placeholderName", "DuckDuckGo");
lockPref("browser.urlbar.placeholderName.private", "DuckDuckGo");

// New tab and homepage settings
lockPref("browser.startup.homepage", "https://duckduckgo.com");
lockPref("browser.newtabpage.enabled", true);
lockPref("browser.newtab.url", "https://duckduckgo.com");
lockPref("browser.startup.page", 1);  // 1 = ana sayfa, 3 = son sayfaları göster

// Set DuckDuckGo as the default search engine
lockPref("browser.search.defaulturl", "https://duckduckgo.com/?q=");

// ===== User Interface Improvements =====
// Secure and eye strain reduction

// Enable dark mode
lockPref("browser.theme.content-theme", 0);         // 0 = dark mode
lockPref("browser.theme.toolbar-theme", 0);         // 0 = dark mode
lockPref("extensions.activeThemeID", "firefox-compact-dark@mozilla.org");
lockPref("browser.in-content.dark-mode", true);

// Disable sponsored content and top sites in new tab page
lockPref("browser.newtabpage.activity-stream.showSponsored", false);
lockPref("browser.newtabpage.activity-stream.showSponsoredTopSites", false);
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
lockPref("browser.newtabpage.activity-stream.feeds.snippets", false);

// Disable Firefox notifications and suggestions
lockPref("browser.messaging-system.whatsNewPanel.enabled", false);
lockPref("browser.urlbar.suggest.engines", false);
lockPref("browser.urlbar.suggest.topsites", false);
lockPref("browser.urlbar.shortcuts.bookmarks", false);
lockPref("browser.urlbar.shortcuts.history", false);
lockPref("browser.urlbar.shortcuts.tabs", false);

// ===== System Security =====
// Content security and DNS protections

// Content settings
lockPref("security.mixed_content.block_active_content", true);  // Block mixed content
lockPref("security.mixed_content.block_display_content", true); // Block mixed display content
lockPref("security.fileuri.strict_origin_policy", true);       // Strict origin policy for file URLs
lockPref("pdfjs.enableScripting", false);                     // Disable PDF scripting

// DNS security
lockPref("network.trr.mode", 5);                              // DNS requests disabled (Tor DNS usage)

// Firefox protocol handler security
lockPref("network.protocol-handler.warn-external.http", true);
lockPref("network.protocol-handler.warn-external.https", true);
lockPref("network.protocol-handler.warn-external.file", true);

// Cache cleanup
lockPref("browser.cache.disk.capacity", 0);                    // Disable disk cache
lockPref("browser.cache.disk.enable", false);

// Final administrator note for Securonis FireScorpion Browser:
// This file provides an extremely powerful Firefox browser configuration
// These settings are optimized for maximum privacy with Tor and I2P support 
